<?php
/** @noinspection PhpUnused */
namespace repo;
use eftec\PdoOne;
use eftec\_BasePdoOneRepo;

/**
 * Generated by PdoOne Version 1.37
 * @copyright (c) Jorge Castro C. MIT License  https://github.com/EFTEC/PdoOne 
 * Class TablachildRepo
 */
class TablachildRepo extends _BasePdoOneRepo
{
    const TABLE = 'tablachild';
    const PK = [
	    'idtablachildPK'
	];
    const ME=__CLASS__;   
    
    public static function getDef($onlyKeys=false) {
        $r= [
		    'idtablachildPK' => 'int NOT NULL IDENTITY(1,1)',
		    'valuechild' => 'varchar(50) DEFAULT (NULL)',
		    'idgrandchildFK' => 'int DEFAULT (NULL)'
		];
        return ($onlyKeys)? array_keys($r): $r;
    }
    
    /**
     * It returns an associative array (colname=>key type) with all the keys/indexes (if any)
     * 
     * @return string[]
     */    
    public static function getDefKey() {
        return [
		    'idtablachildPK' => 'PRIMARY KEY',
		    'idgrandchildFK' => 'KEY'
		];
    }
    public static function getDefIdentity() {
        return [
		    'idtablachildPK'
		];
    }
    public static function getDefFK($structure=false) {
        if ($structure) {
            return [
			    'idgrandchildFK' => 'FOREIGN KEY REFERENCES tablagrandchild(idgrandchildPK)'
			];
        }
        /* key,refcol,reftable,extra */
        return [
		    'idgrandchildFK' => [
		        'key' => 'FOREIGN KEY',
		        'refcol' => 'idgrandchildPK',
		        'reftable' => 'tablagrandchild',
		        'extra' => ''
		    ],
		    '/idgrandchildFK' => [
		        'key' => 'MANYTOONE',
		        'refcol' => 'idgrandchildPK',
		        'reftable' => 'tablagrandchild',
		        'extra' => NULL
		    ],
		    '/tablaparent' => [
		        'key' => 'ONETOMANY',
		        'col' => 'idtablachildPK',
		        'reftable' => 'tablaparent',
		        'refcol' => '/idchildFK'
		    ]
		];
    }
    public static function toList($filter=null,$filterValue=null) {
        return self::_toList($filter,$filterValue);
    }
    public static function first($pk = null) {
        return self::_first($pk);
    }
    public static function insert($entity) {
        return self::_insert($entity);
    }
    public static function update($entity) {
        return self::_update($entity);
    }
    public static function delete($filter=null,$filterValue=null) {
        return self::_delete($filter,$filterValue);
    }
    public static function deleteById($pk) {
        return self::_deleteById($pk);
    }  
    

    public static function factory() {
        $recursive=static::getRecursive();
        return [
		'idtablachildPK'=>0,
		'/tablaparent'=>(in_array('/tablaparent',$recursive))
		                            ? [] 
		                            : null, /* onetomany */
		'/tablaparent'=>(in_array('/tablaparent',$recursive))
		                            ? [] 
		                            : null, /* onetomany */
		'valuechild'=>'',
		'idgrandchildFK'=>0,
		'/idgrandchildFK'=>(in_array('/idgrandchildFK',$recursive)) 
		                            ? tablagrandchildRepo::factory() 
		                            : null, /* manytoone */
		];
    }
    public static function factoryNull() {
        return [
		'idtablachildPK'=>null,
		'/tablaparent'=>null, /* onetomany */
		'/tablaparent'=>null, /* onetomany */
		'valuechild'=>null,
		'idgrandchildFK'=>null,
		'/idgrandchildFK'=>null, /* manytoone */
		];
    }     
     
}