<?php
/**
 * This class is used for autocomplete.
 * Class _AUTOLOAD_
 * @noautoload it avoids to index this class
 * @generated by AutoLoadOne 1.19.2 generated 2020/07/19 01:22:13
 * @copyright Copyright Jorge Castro C - MIT License. https://github.com/EFTEC/AutoLoadOne
 */
$s5f14814541d87__debug = true;

/* @var string[] Where $_arrautoloadCustom['namespace\Class']='folder\file.php' */
$s5f14814541d87__arrautoloadCustom = [
	'sqlsrv\repomodel\TableCategoryModel' => '|1|ategoryModel.php',
	'sqlsrv\repomodel\TableChildModel' => '|1|hildModel.php',
	'sqlsrv\repomodel\TableGrandChildModel' => '|2|GrandChildModel.php',
	'sqlsrv\repomodel\TableGrandChildTagModel' => '|2|GrandChildTagModel.php',
	'sqlsrv\repomodel\TableParentExtModel' => '|2|ParentExtModel.php',
	'sqlsrv\repomodel\TableParentModel' => '|2|ParentModel.php',
	'sqlsrv\repomodel\TableParentxCategoryModel' => '|2|ParentxCategoryModel.php'
];
$s5f14814541d87__arrautoloadCustomCommon = [
	1 => '/generatedmodel/AbstractTableC',
	2 => '/generatedmodel/AbstractTable'
];

/* @var string[] Where $_arrautoload['namespace']='folder' */
$s5f14814541d87__arrautoload = [
	'reposqlsrv' => '/generated',
	'sqlsrv\repomodel' => '/generatedmodel'
];
$s5f14814541d87__arrautoloadCommon = [

];

/* @var boolean[] Where $_arrautoload['namespace' or 'namespace\Class']=true if it's absolute (it uses the full path) */
$s5f14814541d87__arrautoloadAbsolute = [
 
];

/**
 * @param $class_name
 * @throws Exception
 */
function s5f14814541d87__auto($class_name)
{
    // its called only if the class is not loaded.
    $ns = dirname($class_name); // without trailing
    $ns = ($ns === '.') ? '' : $ns;
    $cls = basename($class_name);
    // special cases
    if (isset($GLOBALS['s5f14814541d87__arrautoloadCustom'][$class_name])) {
        s5f14814541d87__loadIfExists($GLOBALS['s5f14814541d87__arrautoloadCustom'][$class_name]
            , $class_name,'s5f14814541d87__arrautoloadCustomCommon');
        return;
    }
    // normal (folder) cases
    if (isset($GLOBALS['s5f14814541d87__arrautoload'][$ns])) {
        s5f14814541d87__loadIfExists($GLOBALS['s5f14814541d87__arrautoload'][$ns] . '/' . $cls . '.php'
            , $ns,'s5f14814541d87__arrautoloadCommon');
        return;
    }
}

/**
 * We load the file.    
 * @param string $filename
 * @param string $key key of the class it could be the full class name or only the namespace
 * @param string $arrayName [optional] it's the name of the arrayname used to replaced |n| values. 
 * @throws Exception
 */
function s5f14814541d87__loadIfExists($filename, $key,$arrayName='')
{
    if (isset($GLOBALS['s5f14814541d87__arrautoloadAbsolute'][$key])) {
        $fullFile = $filename; // its an absolute path
        if (strpos($fullFile, '../') === 0) { // Or maybe, not, it's a remote-relative path.
            $oldDir = getcwd();  // we copy the current url
            chdir(__DIR__);
        }
    } else {
        $fullFile = __DIR__ . '/' . s5f14814541d87__replaceCurlyVariable($filename, $arrayName); // its relative to this path
    }
    /** @noinspection PhpIncludeInspection */
    if ((@include $fullFile) === false) {
        if ($GLOBALS['s5f14814541d87__debug']) {
            throw new RuntimeException('AutoLoadOne Error: Loading file [' . __DIR__ . '/' . $filename . '] for class [' . basename($filename) .
                                 ']');
        }
        throw new RuntimeException('AutoLoadOne Error: No file found.');
    }
    if (isset($oldDir)) {
        chdir($oldDir);
    }
} 
function s5f14814541d87__replaceCurlyVariable($string,$arrayName) {
    if(strpos($string,'|')===false) {
        return $string;
    } // nothing to replace.
    return preg_replace_callback('/\\|\s?(\w+)\s?\\|/u', static function ($matches) use ($arrayName) {
        $item = is_array($matches) ? substr($matches[0], 1, -1)
            : substr($matches, 1, -1);
        return $GLOBALS[$arrayName][$item];
    }, $string);
}

spl_autoload_register(static function ($class_name) {
    s5f14814541d87__auto($class_name);
});
// autorun

